SELECT *
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE continent is not null
ORDER BY 3,4;

--SELECT * 
--FROM `poetic-bongo-323318.PortfolioProject.CovidVax`
--ORDER BY 3, 4;

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
ORDER BY 1,2;

--Looking at total cases vs total deaths
--Shows likelihood of dying if you contract covid in the selected country
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE Location like "Turkey"
ORDER BY 1,2;

--Looking at Total Cases vs Population
--Shows the percentage of population that got covid
SELECT Location, date, population, total_cases, (total_cases/population)*100 
AS PercentPopulationInfected
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE Location like "Turkey"
ORDER BY 1,2;

--Looking at Countries with highest Infection Rate

SELECT Location, Population, MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population))*100 
AS PercentPopulationInfected
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
GROUP BY Location, Population
ORDER BY PercentPopulationInfected DESC;

--Showing Countries with Highest Death Count per Population

SELECT Location, MAX(cast (total_deaths AS int)) AS TotalDeathCount 
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE continent is not null
GROUP BY Location
ORDER BY TotalDeathCount DESC;

--Seperating By Continent

SELECT continent, MAX(cast (total_deaths AS int)) AS TotalDeathCount 
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC;

-- GLOBAL NUMBERS

SELECT  date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as int))/SUM(new_cases)*100 
AS DeathPercentage
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths`
WHERE continent is not null
GROUP BY date
ORDER BY 1,2;

--Looking at Total Population vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vax.new_vaccinations,
SUM(Cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) 
AS RollingPeopleVaccinated,
--(RollingPeopleVaccinated/Population)*100
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths` dea
join `poetic-bongo-323318.PortfolioProject.CovidVax` vax
on dea.location = vax.location
and dea.date = vax.date
WHERE dea.continent is not null
ORDER BY 2,3;

--CTE

With PopvsVac 
AS
(
SELECT dea.continent, dea.Location, dea.date, dea.population, vax.new_vaccinations,
SUM(Cast(vax.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) 
AS RollingPeopleVaccinated,
--(RollingPeopleVaccinated/Population)*100
FROM `poetic-bongo-323318.PortfolioProject.CovidDeaths` dea
join `poetic-bongo-323318.PortfolioProject.CovidVax` vax
on dea.location = vax.location
and dea.date = vax.date
WHERE dea.continent is not null
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac;


